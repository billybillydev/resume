---
import { textSizeClassMap } from "@common/classes";
import { ThemeColorType } from "@common/types";
import type { TooltipProps } from "@components/tooltip/props";
import { TooltipPositionType } from "@components/tooltip/types";

type Props = TooltipProps;
const {
  text = "",
  html = "",
  position = "top",
  type = "",
  size = "sm",
  triggerOnHover = true,
  component: Component,
} = Astro.props;

const colorTypeClassMap = new Map<ThemeColorType, string>([
  ["primary", "bg-primary-400"],
  ["secondary", "bg-secondary"],
  ["success", "bg-success-400"],
  ["danger", "bg-danger-400"],
  ["info", "bg-info-400"],
  ["warning", "bg-warning-400"],
]);
const positionClassMap = new Map<TooltipPositionType, string>([
  ["top", "top-0 left-1/2 -translate-x-1/2 -mt-0.5 -translate-y-full"],
  ["left", "top-1/2 -translate-y-1/2 -ml-0.5 left-0 -translate-x-full"],
  ["bottom", "bottom-0 left-1/2 -translate-x-1/2 -mb-0.5 translate-y-full"],
  ["right", "top-1/2 -translate-y-1/2 -mr-0.5 right-0 translate-x-full"],
]);
const arrowPositionClassMap = new Map<TooltipPositionType, string>([
  ["top", "bottom-0 -translate-x-1/2 left-1/2 w-2.5 translate-y-full"],
  ["left", "right-0 -translate-y-1/2 top-1/2 h-2.5 -mt-px translate-x-full"],
  ["bottom", "top-0 -translate-x-1/2 left-1/2 w-2.5 -translate-y-full"],
  ["right", "left-0 -translate-y-1/2 top-1/2 h-2.5 -mt-px -translate-x-full"],
]);
const arrowOrientationClassMap = new Map<TooltipPositionType, string>([
  ["top", "origin-top-left -rotate-45"],
  ["left", "origin-top-left rotate-45"],
  ["bottom", "origin-bottom-left rotate-45"],
  ["right", "origin-top-right -rotate-45"],
]);
---

<div x-data={`tooltip(${triggerOnHover})`} class="relative inline-flex">
  <div
    x-ref="tooltip"
    x-show="visible"
    class:list={[
      "absolute",
      positionClassMap.get(position),
      textSizeClassMap.get(size),
    ]}
    x-cloak
  >
    <div
      x-show="visible"
      x-transition
      class:list={[
        "relative px-2 py-1 bg-opacity-90",
        type ? colorTypeClassMap.get(type) : "bg-slate-700 text-white",
      ]}
    >
      {
        text ? (
          <p class="flex-shrink-0 block whitespace-nowrap">{text}</p>
        ) : html ? (
          <Fragment set:html={html} />
        ) : Component ? (
          <Component />
        ) : null
      }
      <div
        class:list={[
          "absolute inline-flex items-center justify-center overflow-hidden",
          arrowPositionClassMap.get(position),
        ]}
      >
        <div
          class:list={[
            "w-1.5 h-1.5 transform bg-opacity-90",
            arrowOrientationClassMap.get(position),
            type ? colorTypeClassMap.get(type) : "bg-slate-700 text-white",
          ]}
        >
        </div>
      </div>
    </div>
  </div>
  <div x-ref="content" class="inline-table">
    <slot />
  </div>
</div>
