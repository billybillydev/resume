---
import { twMerge } from "tailwind-merge";
import type { PositionType } from "@common/types";
import CrossIcon from "@components/icon/CrossIcon.astro";
import type { SidebarContentProps } from "@components/sidebar/props";

type Props = SidebarContentProps;
const {
  selector = "body",
  title,
  position = "right",
  class: className,
} = Astro.props;
const positionClassMap = new Map<PositionType, string>([
  ["right", "right-0"],
  ["left", "left-0"],
  ["top", "top-0"],
  ["bottom", "bottom-0"],
]);

const transitionClassMap = new Map<
  PositionType,
  {
    enter: { start: string; end: string };
    leave: { start: string; end: string };
  }
>([
  [
    "right",
    {
      enter: {
        start: "translate-x-full opacity-0",
        end: "translate-x-0 opacity-100",
      },
      leave: {
        start: "translate-x-0 opacity-100",
        end: "translate-x-full opacity-0",
      },
    },
  ],
  [
    "left",
    {
      enter: {
        start: "-translate-x-full opacity-0",
        end: "translate-x-0 opacity-100",
      },
      leave: {
        start: "translate-x-0 opacity-100",
        end: "-translate-x-full opacity-0",
      },
    },
  ],
  [
    "top",
    {
      enter: {
        start: "-translate-y-full opacity-0",
        end: "translate-y-0 opacity-100",
      },
      leave: {
        start: "translate-y-0 opacity-100",
        end: "-translate-y-full opacity-0",
      },
    },
  ],
  [
    "bottom",
    {
      enter: {
        start: "translate-y-full opacity-0",
        end: "translate-y-0 opacity-100",
      },
      leave: {
        start: "translate-y-0 opacity-100",
        end: "translate-y-full opacity-0",
      },
    },
  ],
]);
---

<template x-teleport={selector}>
  <div
    x-bind="shower"
    class:list={[
      "top-0 left-0 flex items-center justify-center",
      selector !== "body"
        ? "absolute w-full h-full"
        : "fixed w-screen h-screen z-[99]",
      ,
    ]}
  >
    <div
      x-bind="shower"
      x-transition:enter="ease-out duration-300"
      x-transition:enter-start="opacity-0"
      x-transition:enter-end="opacity-100"
      x-transition:leave="ease-in duration-300"
      x-transition:leave-start="opacity-100"
      x-transition:leave-end="opacity-0"
      @click="close()"
      class="absolute inset-0 w-full h-full bg-black bg-opacity-40"
    >
    </div>
    <div
      x-bind="shower"
      x-transition:enter="transition ease-in-out duration-500 sm:duration-700"
      x-transition:enter-start={transitionClassMap.get(position)?.enter.start}
      x-transition:enter-end={transitionClassMap.get(position)?.enter.end}
      x-transition:leave="transition ease-in-out duration-500 sm:duration-700"
      x-transition:leave-start={transitionClassMap.get(position)?.leave.start}
      x-transition:leave-end={transitionClassMap.get(position)?.leave.end}
      class:list={[
        positionClassMap.get(position),
        twMerge(
          "absolute inset-O flex flex-col gap-y-2 h-full overflow-y-scroll bg-white border-neutral-100/70",
          className
        ),
      ]}
    >
      <div class="flex items-center justify-between w-full p-2 sm:p-4">
        {
          title ? (
            <h2
              class="text-base font-semibold leading-6 text-gray-900 w-full"
              id="slide-over-title"
            >
              {title}
            </h2>
          ) : null
        }
        <div class="flex items-center justify-end w-full">
          <button
            x-bind="closerClick"
            class="flex items-center justify-between px-3 py-2 gap-x-2 text-xs font-medium uppercase border rounded-md border-neutral-200 text-neutral-600 hover:bg-neutral-100"
          >
            <CrossIcon />
            <span>Close</span>
          </button>
        </div>
      </div>
      <slot />
    </div>
  </div>
</template>
